
	//44. Wildcard Matching

//Problem Link:	https://leetcode.com/problems/wildcard-matching

bool isMatch(string s, string p) {
    int m = p.length(), n = s.length();
    vector<vector<bool>> dp(m + 1,vector<bool>(n + 1,false));
    for(int i = m;i >= 0;i--){
        for(int j = n;j >=0 ;j--){
            if(i == m and j == n) dp[i][j] = true;
            else if(i == m) dp[i][j] = false;
            else if(j == n){
                if(p[i] == '*') dp[i][j] = dp[i+1][j];
            }
            else{
                if(p[i] == '?' or p[i] == s[j]) dp[i][j] = dp[i+1][j+1];
                else if(p[i] == '*'){
                    dp[i][j] = (dp[i+1][j] | dp[i][j+1]);
                }
            }
        }
    }
    return dp[0][0];
}