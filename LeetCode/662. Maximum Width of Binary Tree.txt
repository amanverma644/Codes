
	//662. Maximum Width of Binary Tree

//Problem Link:	https://leetcode.com/problems/maximum-width-of-binary-tree

int widthOfBinaryTree(TreeNode* root) {
    queue<pair<TreeNode*,long>> q;
    q.push({root,0});
    int res = 0;

    while(!q.empty()){
        int size = q.size();
        int mmi = q.front().second;
        int first = 0,last = 0;
        for(int i = 0;i < size;i++){
            int cur_idx = q.front().second - mmi;
            auto node = q.front().first;
            q.pop();

            if(i == 0) first = cur_idx;
            if(i == size - 1) last = cur_idx;
            if(node->left) q.push({node->left,(long) 2*cur_idx + 1});
            if(node->right) q.push({node->right,(long) 2*cur_idx + 2});
        }
        res = max(res,last-first+1);
    }

    return res;
}