
	//5. Longest Palindromic Substring

//Problem Link: https://leetcode.com/problems/longest-palindromic-substring

//Gap Method
string longestPalindrome(string s) {
	int n = s.length();
	vector<vector<bool>> dp(n, vector<bool>(n, false));
	string ans = "";
	int si = 0;
	int len = 0;

	for (int g = 0; g < n; g++) {
		for (int i = 0, j = g; j < n; i++, j++) {
			if (g == 0) {
				dp[i][j] = true;
			} else if (g == 1) {
				if (s[i] == s[j]) {
					dp[i][j] = true;
				}
			} else {
				if (s[i] == s[j] and dp[i + 1][j - 1]) {
					dp[i][j] = true;
				}
			}

			if (dp[i][j]) {
				si = i;
				len = g + 1;
			}
		}
	}
	ans = s.substr(si, len);
	return ans;
}