
	//LeetCode 647 Palindromic Substrings

#include <bits/stdc++.h>
using namespace std;

int isPlaindrome(string &s,int i,int j,vector<vector<int>> &dp){
    //base case
    if(i>=j){
        return 1;
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    if(s[i]==s[j]){
        dp[i][j] = isPlaindrome(s,i+1,j-1,dp);
    }else{
        dp[i][j] = 0;
    }
    return dp[i][j];
}

int countSubstrings(string s) {
    int n=s.length();
    vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
    int count=0;
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            count+=isPlaindrome(s,i,j,dp);
        }
    }
    return count;
}


int main() {
   string s="aaa";
   cout<<countSubstrings(s)<<endl;
   return 0;
}
