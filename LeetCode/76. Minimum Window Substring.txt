
	//76. Minimum Window Substring

//Problem Link:	https://leetcode.com/problems/minimum-window-substring

string minWindow(string s, string t) {
    vector<int> FS(256,0),FP(256,0);
    for(auto ch:t) FP[ch]++;

    int cnt = 0,start = 0;
    int window_size,start_window = -1,minWindow_len = INT_MAX;
    for(int i = 0;i < s.length();i++){
        //expand the window
        char ch = s[i];
        FS[ch]++;

        if(FP[ch] != 0 and FS[ch] <= FP[ch]) cnt++;

        //matched all the pattern
        if(cnt == t.size()){
            //contract from start
            while(FP[s[start]] == 0 or FS[s[start]] > FP[s[start]]){
                FS[s[start]]--;
                start++;
            }

            //note the window size
            window_size = i - start + 1;
            if(window_size < minWindow_len){
                start_window = start;
                minWindow_len = window_size;
            }
        }
    }

    return start_window == -1 ? "" : s.substr(start_window,minWindow_len);
}