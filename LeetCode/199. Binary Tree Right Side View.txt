
	//199. Binary Tree Right Side View

//Problem Link:	https://leetcode.com/problems/binary-tree-right-side-view
	
//DFS
void dfs(TreeNode* root,vector<int> &res,int level){
    if(!root) return;
    if(level == res.size()) res.push_back(root->val);
    dfs(root->right,res,level + 1);
    dfs(root->left,res,level + 1);
}

vector<int> rightSideView(TreeNode* root) {
    vector<int> res;
    dfs(root,res,0);
    return res;
}


//BFS
vector<int> rightSideView(TreeNode* root) {
    if(!root) return {};

    vector<int> res;
    queue<TreeNode*> q;
    q.push(root);

    while(!q.empty()){
        int size = q.size();
        int i = 0;
        while(i < size){
            TreeNode* curr = q.front();
            q.pop();

            if(i == size - 1)  res.push_back(curr->val);

            if(curr->left) q.push(curr->left);
            if(curr->right) q.push(curr->right);
            i++;
        }
    }
    return res;
}