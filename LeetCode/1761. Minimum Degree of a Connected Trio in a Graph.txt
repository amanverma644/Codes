
	//1761. Minimum Degree of a Connected Trio in a Graph

//Problem Link:	https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph

int minTrioDegree(int n, vector<vector<int>> edges) {
	list<int> *l = new list<int>[n+1];
	vector<vector<int>> adj(n+1, vector<int>(n+1, 0));

	for (auto edge : edges) {
		adj[edge[0]][edge[1]] = 1;
		adj[edge[1]][edge[0]] = 1;
		l[edge[0]].push_back(edge[1]);
		l[edge[1]].push_back(edge[0]);
	}

	int minTrio = INT_MAX;
	for (int i = 1; i <= n; i++) {
		for (int j = i + 1; j <= n; j++) {
			for (int k = j + 1; k <= n; k++) {
				if (adj[i][j] and adj[j][k] and adj[i][k]) {
	int curr =  l[i].size() + l[j].size() + l[k].size() - 6;
					minTrio = min(minTrio,curr);
				}
			}
		}
	}
	return minTrio == INT_MAX ? -1 : minTrio;
}