
	//72. Edit Distance

//Problem Link:	https://leetcode.com/problems/edit-distance

int helper(string word1,string word2,int i,int j,vector<vector<int>> &dp){
    //base case
    if(i == word1.length() and j == word2.length()){
        return 0;
    }

    if(i == word1.length()){
        return word2.length() - j;
    }
    if(j == word2.length()){
        return word1.length() - i;
    }
    
    if(dp[i][j] != -1){
        return dp[i][j];
    }

    if(word1[i] == word2[j]){
        return dp[i][j] = helper(word1,word2,i+1,j+1,dp);
    }
    return dp[i][j] = 1 + min(helper(word1,word2,i+1,j,dp),min(helper(word1,word2,i,j+1,dp),helper(word1,word2,i+1,j+1,dp)));
}

int minDistance(string word1, string word2) {
    vector<vector<int>> dp(word1.length(),vector<int>(word2.length(),-1));
    return helper(word1,word2,0,0,dp);
}