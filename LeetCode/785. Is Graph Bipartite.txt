
	//785. Is Graph Bipartite?

//Problem Link:	https://leetcode.com/problems/is-graph-bipartite

bool dfs(vector<vector<int>> &graph, int node, int parent, vector<int> &visited, int color) {
	visited[node] = color;
	for (auto nbr : graph[node]) {
		if (visited[nbr] == 0) {
			bool subProb = dfs(graph, nbr, node, visited, 3 - color);
			if (subProb == false) return false;
		} else if (nbr != parent and color == visited[nbr]) return false;
	}
	return true;
}

bool isBipartite(vector<vector<int>> &graph) {
	int N = graph.size();
	vector<int> visited(N, 0);

	for (int i = 0; i < N; i++) {
		if (visited[i] == 0) {
			if (!dfs(graph, i, -1, visited, 1)) return false;
		}
	}
	return true;
}