
	//1074. Number of Submatrices That Sum to Target

//link:: https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/

//<------------CODE-------------->
#include <bits/stdc++.h>
using namespace std;

int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
    int m=matrix.size();
    int n=matrix[0].size();
    for(int i=0;i<m;i++){
        for(int j=1;j<n;j++){
            matrix[i][j]+=matrix[i][j-1];
        }
    }

    int count = 0;
    for(int c1 = 0;c1 < n;c1++){
        for(int c2 = c1;c2<n;c2++){
            unordered_map<int,int> mp;
            mp[0]++;
            int sum = 0;
            for(int row = 0; row < m;row++){
                sum+=matrix[row][c2] - (c1 == 0 ? 0 : matrix[row][c1-1]);
                count+=mp[sum-target];
                mp[sum]++;
            }
        }
    }
    return count;
}

int main() {
    vector<vector<int>> matrix={{0,1,0},{1,1,1},{0,1,0}};
    int target = 0;
    cout<<numSubmatrixSumTarget(matrix, target)<<endl;

    return 0;
}
