
	//160. Intersection of Two Linked Lists

//Problem Link:	https://leetcode.com/problems/intersection-of-two-linked-lists


//Approach-1

ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
    if(headA == NULL or headB == NULL) return NULL;

    ListNode *a = headA;
    ListNode *b = headB;

    while(a != b){
        a = a == NULL ? headB : a->next;
        b = b == NULL ? headA : b->next;
    }

    return a;
}

//Approach - 2 (Similar to 1 but take more time)

ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
    if(headA == NULL or headB == NULL){
        return NULL;
    }

    ListNode *p1 = headA;
    ListNode *p2 = headB;

    while(p1 != NULL and p2 != NULL and p1 != p2){
        p1 = p1->next;
        p2 = p2->next;

        if(p1 == p2){
            return p1;
        }

        if(p1 == NULL){
            p1 = headB;
        }
        if(p2 == NULL){
            p2 = headA;
        }
    }
    return p1;
}