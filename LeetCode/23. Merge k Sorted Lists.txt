
	//23. Merge k Sorted Lists

//Problem Link:	https://leetcode.com/problems/merge-k-sorted-lists	

ListNode* mergeKLists(vector<ListNode*>& lists) {
    priority_queue<pair<int,ListNode*>,vector<pair<int,ListNode*>>,greater<pair<int,ListNode*>>> pq;

    ListNode *dummy = new ListNode(0);
    ListNode *itr = dummy;
    
    //initialise the heap
    for(int i = 0;i<lists.size();i++){
        if(lists[i] != NULL){
            int value = lists[i]->val;
            pq.push({value,lists[i]});
        }
    }

    while(!pq.empty()){
        auto top = pq.top();
        pq.pop();

        ListNode *Node = top.second;
        itr->next = Node;
        itr = itr->next;

        Node = Node->next;
        //insert some more nodes in the heap
        if(Node != NULL){
            pq.push({Node->val,Node});
        }
    }

    itr->next = NULL;
    return dummy->next;
}