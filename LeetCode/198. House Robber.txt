
	//LeetCode 198 House Robber 

#include <bits/stdc++.h>
using namespace std;

int rob(vector<int>& nums) {
    int  n=nums.size();
    //Edge cases
    if(n<2){
        return nums[0];
    }
    if(n<3){
        return max(nums[0],nums[1]);
    }
    vector<int> dp(n,0);
    dp[0]=nums[0];
    dp[1]=nums[1];
    //main logic
    for(int i=2;i<n;i++){
        for(int j=0;j<i-1;j++){
            dp[i]=max(dp[i],max(nums[i]+nums[j],dp[j]+nums[i]));
        }
    }
    return max(dp[n-1],dp[n-2]);
}

int main() {
    vector<int> nums={2,7,9,3,1};
    cout<<rob(nums)<<endl;

    return 0;
}
