
	//35. Search Insert Position

//Problem Link:	https://leetcode.com/problems/search-insert-position

//T.C: O(logN)
int searchInsert(vector<int>& nums, int target) {
    int left = 0;
    int right = nums.size() - 1;
    while(left<=right){
        int mid = (left + right)/2;
        if(nums[mid] == target){
            return mid;
        }

        if(nums[mid] > target){
            right = mid-1;
        }else{
            left = mid + 1;
        }
    }
    return left;
}
//T.C: O(N)
int searchInsert(vector<int>& nums, int target) {
    int ans = 0;
    for(int i = 0;i<nums.size();i++){
        if(nums[i] == target || nums[i]>target){
            ans = i;
            return ans;
        }
    }
    return nums.size();
}