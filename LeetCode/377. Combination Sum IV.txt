
	//377. Combination Sum IV

//Problem Link:	https://leetcode.com/problems/combination-sum-iv

//Top-Down DP
int helper(vector<int> &nums,int target,vector<int> &dp){
    if(target == 0) return 1;
    if(dp[target] != -1) return dp[target];

    int cnt = 0;
    for(auto num:nums){
        if(target >= num) cnt += helper(nums,target - num,dp);
    }
    return dp[target] = cnt;
}

int combinationSum4(vector<int>& nums, int target) {
    vector<int> dp(target + 1,-1);
    return helper(nums,target,dp);
}

//Bottom-up dp
int combinationSum4(vector<int>& nums, int target) {
    vector<unsigned int> dp(target + 1,0);
    dp[0] = 1;

    for(int i = 1;i <= target;i++){
        for(auto num:nums){
            if(i >= num) dp[i] += dp[i-num];
        }
    }

    return dp[target];
}