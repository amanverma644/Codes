
	//987. Vertical Order Traversal of a Binary Tree

//Problem Link:	https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree

vector<vector<int>> verticalTraversal(TreeNode* root) {
    queue<pair<TreeNode*,pair<int,int>>> q;
    q.push({root,{0,0}});
    map<int,vector<pair<int,int>>> mp;

    while(!q.empty()){
        auto curr = q.front();
        q.pop();

        auto node = curr.first;
        int dist = curr.second.first;
        int level = curr.second.second;

        mp[dist].push_back({node->val,level});

        if(node->left) q.push({node->left,{dist-1,level + 1}});
        if(node->right) q.push({node->right,{dist+1,level + 1}});
    }

    vector<vector<int>> res;
    for(auto p:mp) {
        auto v = p.second;
        sort(begin(v),end(v),[](pair<int,int> a,pair<int,int> b){
            if(a.second == b.second) return a.first < b.first;
            return a.second < b.second;
        });
        vector<int> temp;
        for(auto val:v){
            temp.push_back(val.first);
        }
        res.push_back(temp);
    }
    return res;
}