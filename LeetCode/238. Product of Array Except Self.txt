
	//238. Product of Array Except Self

//Problem Link:	https://leetcode.com/problems/product-of-array-except-self
	
//T.C -> O(N) && S.C -> O(N)
vector<int> productExceptSelf(vector<int>& nums) {
    int n = nums.size();
    int begin,end;
    begin = end = 1;
    vector<int> res(n);

    for(int i = 0;i<n;i++){
        res[i]=begin;
        begin*=nums[i];
    }

    for(int i = n-1;i>=0;i--){
        res[i]*=end;
        end*=nums[i];
    }
    return res;
}

//T.C -> O(N) && S.C -> O(1)
vector<int> productExceptSelf(vector<int>& nums) {
    int n = nums.size();
    vector<int> begin(n);
    vector<int> end(n);

    begin[0] = 1;
    end[0] = 1;

    for(int i = 1;i<n;i++){
        begin[i] = begin[i-1]*nums[i-1];
        end[i] = end[i-1]*nums[n-i];
    }
    vector<int> res(n);
    for(int i = 0;i<n;i++){
        res[i] = begin[i]*end[n-i-1];
    }
    return res;
}

