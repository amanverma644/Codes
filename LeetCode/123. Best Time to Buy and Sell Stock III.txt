
	//123. Best Time to Buy and Sell Stock III

//Problem Link:	https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii

//Ref Link: https://www.youtube.com/watch?v=wuzTpONbd-0
	
int maxProfit(vector<int>& prices) {
    //maximum profit if sell today
    int mpist = 0;
    //least so far
    int leastsf = prices[0];
    vector<int> dpl(prices.size(),0);

    for(int i = 1;i<prices.size();i++){
        if(prices[i] < leastsf){
            leastsf = prices[i];
        }
        mpist = prices[i] - leastsf;
        if(mpist>dpl[i-1]){
            dpl[i] = mpist;
        }else{
            dpl[i] = dpl[i-1];
        }
    }

    //maximum profit if bought today
    int mpibt = 0;
    //max after today
    int maxat = prices[prices.size()-1];
    vector<int> dpr(prices.size(),0);

    for(int i = prices.size() - 2;i>=0;i--){
        if(prices[i] > maxat){
            maxat = prices[i];
        }
        mpibt = maxat - prices[i];
        if(mpibt > dpr[i+1]){
            dpr[i] = mpibt;
        }else{
            dpr[i] = dpr[i+1];
        }
    }

    // for(auto x:dpl){
    //     cout<<x<<" ";
    // }
    // cout<<endl;
    // for(auto x:dpr){
    //     cout<<x<<" ";
    // }
    // cout<<endl;
    //options
    int op = 0;
    for(int i = 0;i<prices.size();i++){
        op = max(op,dpl[i] + dpr[i]);
    }
    return op;
}