
	//Box Stacking Compelete Code

#include <bits/stdc++.h>
using namespace std;

bool compare(vector<int> b1,vector<int> b2){
    return b1[2]<b2[2];
}

int boxStacking(vector<vector<int>> boxes){
    sort(boxes.begin(),boxes.end(),compare);
    int n=boxes.size();
    vector<int> dp(n,0);
    for(int i=0;i<n;i++){
        dp[i]=boxes[i][2];
    }
    int maxHeight=0;
    for(int i=1;i<n;i++){
        for(int j=0;j<i;j++){
            if(boxes[j][0]<boxes[i][0] and boxes[j][1]<boxes[i][1] and boxes[j][2]<boxes[i][2]){
                dp[i]=max(dp[i],(boxes[i][2]+dp[j]));
                maxHeight=max(maxHeight,dp[i]);
            }
        }
    }
    return maxHeight;
}

int main() {
    vector<vector<int>> boxes={
        {2 ,1, 2},
        {3 ,2, 3},
        {2 ,2, 8},
        {2 ,3, 4},
        {2 ,2, 1},
        {4 ,4, 5}
    };
    cout<<boxStacking(boxes)<<endl;
    return 0;
}

