
	//Array Jumps

/*
Given an array of positive integers, where each element represents the max no of steps you can jump forward in the array.

Find the minimum jumps needed to reach the final index.
*/


//<---------TOP-DOWN APPROACH--------->
#include <bits/stdc++.h>
using namespace std;

int min_jumps(vector<int> arr,int n,vector<int> dp,int i){
    //Base Case
    if(i==n-1){
        return 0;
    }
    if(i>=n){
        return INT_MAX;
    }
    if(dp[i]!=0){
        return dp[i];
    }
    int steps=INT_MAX;
    int max_jump=arr[i];
    for(int jump=1;jump<=max_jump;jump++){
        int next_cell=i+jump;
        int subprob=min_jumps(arr,n,dp,next_cell);
        if(subprob!=INT_MAX){
            steps=min(steps,subprob+1);
        }
    }
    return dp[i]=steps;
}

int main() {
    vector<int> arr={3,4,2,1,2,3,10,1,1,1,2,5};
    int n=arr.size();
    vector<int> dp(n+1,0);
    cout<<min_jumps(arr,n,dp,0)<<endl;
    return 0;
}
